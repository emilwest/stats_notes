---
author: "Emil Westin"
format: gfm
execute: 
  eval: false
editor: 
  markdown: 
    wrap: sentence
---


# Retrieve data from Polisen open API

Returns a tibble of useful information from Swedish Police reports given location, date or event.
More info here about what you can do: <https://polisen.se/om-polisen/om-webbplatsen/oppna-data/api-over-polisens-handelser/>

```{r polisen}
library(httr)
library(tidyverse)
library(lubridate)
library(jsonlite)

get_polisen <- function(.date = NULL, .location=NULL, .events = NULL, .preprocess = T) {
  base_url <- "https://polisen.se/api/events?"
  url <- base_url
  if (!is.null(.events)) {
    events <- str_c(.events, collapse = ";")
    url <- str_c(base_url, "type=", events)
  }
  if (!is.null(.date)) {
    url <- str_c(url, "&DateTime=", .date)
  }
  if (!is.null(.location)) {
    locations <- str_c(.location, collapse = ";")
    url <- str_c(url, "&locationname=", locations)
  }

  resp <- httr::GET(as.character(url))
  
  if (httr::http_status(resp)$category != "Success") {
    print(resp)
    stop("Http status not success")
  }
  
  df <- resp %>%
    content(as = "text") %>%
    jsonlite::fromJSON() %>%
    as_tibble()
  
  if (.preprocess & nrow(df) != 0) {
    df <- df %>% 
      mutate(datetime = lubridate::as_datetime(datetime, tz = "Europe/Stockholm"),
             url = str_glue("https://polisen.se{url}"),
             summary2 = str_glue("{summary}\n<a href=\"{url}\">Mer info</a>")
      )
    # separate coordinates into two columns, rename duplicate column name
    df$location <- df$location %>% 
      as_tibble() %>% 
      separate(gps, c("lat", "lng"), sep = ",", convert = T) %>% 
      dplyr::rename(location_name = name) %>% 
      # add some noise to coordinates, since all coordinates for a given location are the same.
      # otherwise the points will overlap on the map.
      # the coordinates only show the coordinate of an area, never an exact location
      mutate(lat = jitter(lat), lng = jitter(lng) )
    
    df <- df %>%
      unnest(location)
  } 
  return(df)
}

# get all events:
get_polisen()
# Filter by a vector of events
get_polisen(.date = "2022-06", .location = "Varberg", .events = c("Rån", "Trafikolycka"))
# filter by a vector of locations
get_polisen(.date = "2022-04", .location = c("Varberg","Stockholm"))
# filter by year, year-month or year-month-day:
get_polisen(.date = "2022-06-05", .location = "Linköping")
# # A tibble: 1 x 9
# id datetime            name                                  summary          url                 type   location_name   lat   lng
# <int> <dttm>              <chr>                                 <chr>            <glue>              <chr>  <chr>         <dbl> <dbl>
# 342083 2022-06-05 11:31:12 05 juni 11:31, Rattfylleri, Linköping Trafikant uppmä~ https://polisen.se~ Rattf~ Linköping      58.4  15.6

```

## Interactive plot of police report locations from API

The following code will plot an interactive map of all the coordinates retrieved via the Polisen API function, with popups containing information and links for more information.

Note that the coordinates from Polisen only show the coordinates of a city or area, not an exact location.
Within `get_polisen()`, numeric noise is added to the coordinates in order to be able show all coordinates on a plot (otherwise they will all overlap for a given area).
In order to find out the exact location or area within a city, you would have to click on 'Mer info' where it will probably be given in more detail in the police report.

![Stats notes](img/polisen_plot2.png)

```{r plot_police}
# install.packages("leaflet")
library(leaflet)
library(tidyverse)

get_polisen(.date = "2022-06", .location = "Uppsala") %>% 
  leaflet() %>%
  addTiles() %>%
  addMarkers(lng = ~lng, lat = ~lat, popup = ~summary2, label = ~name)
```

# Retrieve Swedish traffic info from Trafikverket API

See [code](R/trafikverket_api.R) for more details.
Given a coordinate, retrieve traffic information within a 10 000 meter radius and display on an interactive map.
Requires that you register for an api-key at Trafikverket.
For more info, see [here](https://api.trafikinfo.trafikverket.se/).

![Stats notes](img/trafikverket_api_plot.png)

```{r trafikverket}
x <- get_traffic_info(.x = "6398983", .y = "320011")
x %>% 
  plot_traffic()
```

